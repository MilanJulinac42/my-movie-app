[{"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\index.js":"1","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\App.js":"2","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\Search.js":"3","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\items-grid\\Grid.js":"4","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\items-grid\\GridItem.js":"5","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\filter-grid\\FilterGrid.js":"6","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\filter-grid\\FilterGridItem.js":"7","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\initValues.js":"8","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\SearchPage.js":"9","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\EntityPage.js":"10","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\entity-components\\EntityHeading.js":"11","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\entity-components\\EntityDetails.js":"12","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\movie-components\\Genre.js":"13","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\movie-components\\Trailer.js":"14","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\movie-components\\OverwievBiography.js":"15","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\movie-components\\RatingField.js":"16","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\person-components\\PersonBiography.js":"17","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\person-components\\PersonDetails.js":"18","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\person-components\\PersonCredits.js":"19","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\person-components\\CreditItem.js":"20"},{"size":230,"mtime":1609022285283,"results":"21","hashOfConfig":"22"},{"size":563,"mtime":1615573204999,"results":"23","hashOfConfig":"22"},{"size":962,"mtime":1610936825564,"results":"24","hashOfConfig":"22"},{"size":411,"mtime":1611702738457,"results":"25","hashOfConfig":"22"},{"size":5009,"mtime":1615744286244,"results":"26","hashOfConfig":"22"},{"size":490,"mtime":1610923538044,"results":"27","hashOfConfig":"22"},{"size":662,"mtime":1610922839699,"results":"28","hashOfConfig":"22"},{"size":265,"mtime":1612891799434,"results":"29","hashOfConfig":"22"},{"size":1942,"mtime":1615745695857,"results":"30","hashOfConfig":"22"},{"size":2740,"mtime":1615573116987,"results":"31","hashOfConfig":"22"},{"size":1525,"mtime":1615744796645,"results":"32","hashOfConfig":"22"},{"size":1784,"mtime":1615023801616,"results":"33","hashOfConfig":"22"},{"size":387,"mtime":1612915602408,"results":"34","hashOfConfig":"22"},{"size":1046,"mtime":1614982613340,"results":"35","hashOfConfig":"22"},{"size":326,"mtime":1613080969146,"results":"36","hashOfConfig":"22"},{"size":1589,"mtime":1615024407519,"results":"37","hashOfConfig":"22"},{"size":1056,"mtime":1615573114817,"results":"38","hashOfConfig":"22"},{"size":913,"mtime":1613251651572,"results":"39","hashOfConfig":"22"},{"size":2560,"mtime":1615744610120,"results":"40","hashOfConfig":"22"},{"size":709,"mtime":1615744675978,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"9a7e30",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\index.js",[],["92","93"],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\App.js",["94","95"],"import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport SearchPage from \"./components/SearchPage\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport EntityPage from \"./components/EntityPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={SearchPage} />\r\n          <Route path=\"/EntityPage/:entityType/:id\" component={EntityPage} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\Search.js",[],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\items-grid\\Grid.js",[],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\items-grid\\GridItem.js",["96"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport myInitValues from \"../../initValues\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Number = styled.h3`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  padding: 0;\r\n  font-size: 10em;\r\n  color: rgba(255, 255, 255, 0.5);\r\n  transition: all 0.25s ease-in-out;\r\n`;\r\n\r\nconst ItemContentScore = styled.p`\r\n  position: absolute;\r\n  top: 15px;\r\n  left: 20px;\r\n  color: white;\r\n  opacity: 0;\r\n  transition: 2s;\r\n  font-weight: 700;\r\n  font-size: 2em;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst ItemContentTitle = styled.h2`\r\n  position: relative;\r\n  padding: 20px;\r\n  padding-top: 4em;\r\n  color: white;\r\n  opacity: 0;\r\n  transition: 2s;\r\n  margin-bottom: 0px;\r\n`;\r\n\r\nconst ItemContentDescription = styled.p`\r\n  position: relative;\r\n  padding: 20px;\r\n  color: white;\r\n  text-overflow: ellipsis;\r\n  word-wrap: break-word;\r\n  overflow: hidden;\r\n  opacity: 0;\r\n  transition: 2s;\r\n  margin-bottom: 20px;\r\n  margin-top: 0px;\r\n`;\r\n\r\nconst ItemContentReleaseDate = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 20px;\r\n  color: white;\r\n  opacity: 0;\r\n  transition: 2s;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  background-image: url(\"https://image.tmdb.org/t/p/original${(props) =>\r\n    props.image}\");\r\n  background-position: center;\r\n  background-repeat: \"no-repeat\";\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: 500px;\r\n  color: white;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid #000;\r\n  transition: transform 0.25s ease-in-out;\r\n  cursor: pointer;\r\n\r\n  &:hover ${Number} {\r\n    min-width: 3.5em;\r\n    max-width: 3.5em;\r\n    transform: none;\r\n    top: 0px;\r\n    left: 75%;\r\n    font-size: 3em;\r\n    color: white;\r\n  }\r\n\r\n  &:hover ${ItemContentTitle} {\r\n    opacity: 1;\r\n  }\r\n\r\n  &:hover ${ItemContentDescription} {\r\n    opacity: 1;\r\n  }\r\n\r\n  &:hover ${ItemContentReleaseDate} {\r\n    opacity: 1;\r\n  }\r\n  &:hover ${ItemContentScore} {\r\n    opacity: 1;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    height: 0%;\r\n    width: 100%;\r\n    top: 0;\r\n    transition: height 0.5s ease-out;\r\n    background: linear-gradient(to top, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.7));\r\n  }\r\n  &:hover:before {\r\n    height: 100%;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    box-shadow: 0px 10px 13px -7px #000000, 5px 5px 15px 5px rgba(0, 0, 0, 0);\r\n    box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000,\r\n      50px 46px 50px 4px rgba(0, 0, 0, 0);\r\n  }\r\n`;\r\n\r\nfunction GridItem({ item, setEntity }) {\r\n  const [personData, setPersonData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [entityType, setEntityType] = useState(\"\");\r\n\r\n  const getPersonData = async (id) => {\r\n    setIsLoading(true);\r\n    const result = await axios(\r\n      `https://api.themoviedb.org/3/person/${id}?api_key=${myInitValues.API_KEY}&language=${item.LANGUAGE}`\r\n    );\r\n    setPersonData(result);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (item.gender) {\r\n      getPersonData(item.id);\r\n    }\r\n    if (item.first_air_date || item.first_air_date === \"\") {\r\n      setEntityType(\"tv\");\r\n    } else if (item.release_date || item.release_date === \"\") {\r\n      setEntityType(\"movie\");\r\n    } else {\r\n      setEntityType(\"person\");\r\n    }\r\n  }, []);\r\n\r\n  function renderScore() {\r\n    if (item.vote_average || item.vote_average === 0) {\r\n      return (\r\n        <>\r\n          <Number>{item.vote_average ? item.vote_average : \"??\"}</Number>\r\n          <ItemContentScore>Score:</ItemContentScore>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  function renderDate() {\r\n    if (item.release_date) {\r\n      return (\r\n        <ItemContentReleaseDate>\r\n          <p>Release date :</p>\r\n          <p>{item.release_date}</p>\r\n        </ItemContentReleaseDate>\r\n      );\r\n    } else if (item.gender && !isLoading) {\r\n      return (\r\n        <ItemContentReleaseDate>\r\n          <p>Born :</p>\r\n          <p>{personData.data.birthday}</p>\r\n        </ItemContentReleaseDate>\r\n      );\r\n    }\r\n  }\r\n\r\n  function renderOverwiev() {\r\n    if (item.gender && !isLoading) {\r\n      return (\r\n        <ItemContentDescription>\r\n          {personData.data.biography}\r\n        </ItemContentDescription>\r\n      );\r\n    } else {\r\n      return <ItemContentDescription>{item.overview}</ItemContentDescription>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Link to={`/EntityPage/${entityType}/${item.id}`}>\r\n      <ItemContainer\r\n        image={item.poster_path ? item.poster_path : item.profile_path}\r\n      >\r\n        {renderScore()}\r\n        <ItemContentTitle>\r\n          {item.title ? item.title : item.name}\r\n        </ItemContentTitle>\r\n        {renderOverwiev()}\r\n        {renderDate()}\r\n      </ItemContainer>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default GridItem;\r\n","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\filter-grid\\FilterGrid.js",[],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\filter-grid\\FilterGridItem.js",[],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\initValues.js",[],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\SearchPage.js",["97","98"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Search from \"./Search\";\r\nimport Grid from \"./items-grid/Grid\";\r\nimport FilterGrid from \"./filter-grid/FilterGrid\";\r\nimport myInitValues from \"../initValues\";\r\nimport loading from \"../images/loadinggif.gif\";\r\n\r\nfunction SearchPage() {\r\n  const [items, setItems] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [filterType, setFilterType] = useState(\"multi\");\r\n  const [entity, setEntity] = useState({ entityType: \"\", entityId: 0 });\r\n  const [query, setQuery] = useState(\"a\");\r\n\r\n  const fetchItems = async (query) => {\r\n    setIsLoading(true);\r\n    const result = await axios(\r\n      `${myInitValues.API_PATH}${filterType}?api_key=${myInitValues.API_KEY}&language=${myInitValues.LANGUAGE}&query=${query}&page=1&include_adult=${myInitValues.INCLUDE_ADULT}`\r\n    );\r\n    setItems(result.data);\r\n    setIsLoading(false);\r\n    setQuery(query);\r\n    console.log(result.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchItems(query);\r\n    console.log(entity);\r\n  }, [filterType]);\r\n\r\n  const initialRenderAndLoading = () => {\r\n    if (!query) {\r\n      return <h1>ENTER MOVIE,PERSON OR TV SHOW</h1>;\r\n    } else {\r\n      if (!isLoading) {\r\n        return <Grid items={items} setEntity={setEntity} />;\r\n      } else {\r\n        return (\r\n          <img style={{ margin: \"auto\", display: \"block\" }} src={loading} />\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        <div className=\"header-content\">\r\n          <h1>Welcome...</h1>\r\n          <p>\r\n            Millions of movies, TV shows and people to discover. Explore now.\r\n          </p>\r\n          <Search getItems={(query) => fetchItems(query)} />\r\n        </div>\r\n        <FilterGrid onFilterTypeChange={setFilterType} />\r\n      </header>\r\n      {initialRenderAndLoading()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\EntityPage.js",["99","100","101","102"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport EntityHeading from \"./entity-components/EntityHeading\";\r\nimport myInitValues from \"../initValues\";\r\nimport \"./EntityPage.css\";\r\nimport EntityDetails from \"./entity-components/EntityDetails\";\r\nimport PersonBiography from \"./person-components/PersonBiography\";\r\nimport PersonDetails from \"./person-components/PersonDetails\";\r\nimport PersonCredits from \"./person-components/PersonCredits\";\r\n\r\nfunction EntityPage() {\r\n  const [details, setDetails] = useState([]);\r\n  const params = useParams();\r\n\r\n  const fetchDetails = async () => {\r\n    const result = await axios(\r\n      `https://api.themoviedb.org/3/${params.entityType}/${params.id}?api_key=${myInitValues.API_KEY}&language=${myInitValues.LANGUAGE}`\r\n    );\r\n    console.log(result.data);\r\n    setDetails(result.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDetails();\r\n  }, [params]);\r\n\r\n  const render = () => {\r\n    if (params.entityType != \"person\") {\r\n      return (\r\n        <>\r\n          <EntityHeading\r\n            title={\r\n              details.original_title ? details.original_title : details.name\r\n            }\r\n            runtime={details.runtime ? details.runtime : details.last_air_date}\r\n            releaseDate={\r\n              details.release_date\r\n                ? details.release_date\r\n                : details.first_air_date\r\n            }\r\n            params={params}\r\n          />\r\n          <EntityDetails\r\n            poster={details.poster_path}\r\n            genres={details.genres}\r\n            overview={details.overview}\r\n            tagline={details.tagline}\r\n            params={params}\r\n            vote={details.vote_average}\r\n            revenueOrSeasons={\r\n              details.revenue ? details.revenue : details.number_of_seasons\r\n            }\r\n            budgetOrEpisodes={\r\n              details.budget ? details.budget : details.number_of_episodes\r\n            }\r\n            popularity={details.popularity}\r\n          />\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <EntityHeading name={details.name} params={params} />\r\n          <PersonBiography\r\n            profile={details.profile_path}\r\n            biography={details.biography}\r\n            birthday={details.birthday}\r\n            deathday={details.deathday}\r\n            knownFor={details.known_for_department}\r\n            popularity={details.popularity}\r\n            placeOfBirth={details.place_of_birth}\r\n            gender={details.gender}\r\n            params={params}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div className=\"container\">{render()}</div>;\r\n}\r\n\r\nexport default EntityPage;\r\n","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\entity-components\\EntityHeading.js",["103","104","105","106"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport SearchPage from \"../SearchPage\";\r\nimport \"./EntityHeading.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EntityHeading({ title, runtime, releaseDate, params, name }) {\r\n  const [lastAirDateOrDuration, setlastAirDateOrDuration] = useState(\"\");\r\n\r\n  const convertMinutes = () => {\r\n    if (params.entityType === \"movie\") {\r\n      let minutes = runtime % 60;\r\n      let hours = ~~(runtime / 60);\r\n      console.log(minutes);\r\n      console.log(hours);\r\n      setlastAirDateOrDuration(hours + \"h\" + minutes + \"m\");\r\n    } else {\r\n      setlastAirDateOrDuration(runtime);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    convertMinutes();\r\n  });\r\n\r\n  return (\r\n    <div className=\"heading\">\r\n      <div className=\"flex\">\r\n        <Link to={\"/\"}>\r\n          <i className=\"fas fa-film\"></i>\r\n        </Link>\r\n        <h1>{title ? title : name}</h1>\r\n      </div>\r\n      {title ? (\r\n        <div className=\"additional-info \">\r\n          <i className=\"far fa-calendar-alt\"></i>\r\n          <p>{releaseDate}</p>\r\n          <i className=\"fas fa-minus\"></i>\r\n          <i\r\n            className={\r\n              params.entityType === \"movie\"\r\n                ? \"far fa-clock\"\r\n                : \"far fa-calendar-alt\"\r\n            }\r\n          ></i>\r\n          <p>{lastAirDateOrDuration}</p>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EntityHeading;\r\n","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\entity-components\\EntityDetails.js",[],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\movie-components\\Genre.js",[],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\movie-components\\Trailer.js",["107","108"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Trailer.css\";\r\n\r\nfunction Trailer({ params }) {\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  const fetchLink = async () => {\r\n    const result = await axios(\r\n      `https://api.themoviedb.org/3/${params.entityType}/${params.id}/videos?api_key=7f7a0b3c0b79252c89960e5523e5a22a&language=en-US`\r\n    );\r\n\r\n    for (let video of result.data.results) {\r\n      if (video.type === \"Trailer\") {\r\n        console.log(video.key);\r\n        setLink(video.key);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(params);\r\n    fetchLink();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"trailer-container\">\r\n      <iframe\r\n        src={`https://www.youtube.com/embed/${link}`}\r\n        frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowfullscreen\r\n        className=\"responsive-trailer\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Trailer;\r\n","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\movie-components\\OverwievBiography.js",[],["109","110"],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\movie-components\\RatingField.js",["111"],"import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChartLine,\r\n  faChartBar,\r\n  faDollarSign,\r\n  faTv,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./RatingField.css\";\r\n\r\nfunction RatingField({ value, type }) {\r\n  const [icon, setIcon] = useState(\"\");\r\n  const [headline, setHeadline] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(type);\r\n    if (type === \"vote\") {\r\n      setIcon(faChartLine);\r\n      setHeadline(\"Rating\");\r\n      setColor(\"yellow\");\r\n    } else if (type === \"popularity\") {\r\n      setIcon(faChartBar);\r\n      setHeadline(\"Popularity\");\r\n      setColor(\"blue\");\r\n    } else if (type === \"profit\") {\r\n      if (parseInt(value) > 0) {\r\n        setIcon(faDollarSign);\r\n        setColor(\"green\");\r\n      } else {\r\n        setIcon(faDollarSign);\r\n        setColor(\"green\");\r\n      }\r\n      setHeadline(\"Profit\");\r\n    } else {\r\n      setIcon(faTv);\r\n      setHeadline(\"Seasons and episodes\");\r\n      setColor(\"purple\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"rating-field\">\r\n      <h3>{headline}</h3>\r\n      <div className=\"value\">\r\n        <FontAwesomeIcon className={`icon ${color}`} icon={icon} />\r\n        <i className=\"fas fa-long-arrow-alt-right arrow\"></i>\r\n        <p>\r\n          {headline === \"Profit\"\r\n            ? ~~(value / 1000000) + \"m\"\r\n            : headline === \"Popularity\"\r\n            ? value\r\n            : value}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RatingField;\r\n","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\person-components\\PersonBiography.js",[],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\person-components\\PersonDetails.js",[],"C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\person-components\\PersonCredits.js",["112","113","114"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport myInitValues from \"../../initValues\";\r\nimport \"./PersonCredits.css\";\r\nimport CreditItem from \"./CreditItem\";\r\n\r\nfunction PersonCredits({ params }) {\r\n  const [credits, setCredits] = useState([]);\r\n\r\n  const fetchCredits = async () => {\r\n    const result = await axios(\r\n      `https://api.themoviedb.org/3/${params.entityType}/${params.id}/combined_credits?api_key=${myInitValues.API_KEY}&language=${myInitValues.LANGUAGE}`\r\n    );\r\n    setCredits(result.data.cast);\r\n    console.log(credits);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCredits();\r\n  }, []);\r\n\r\n  const getUniqueYears = () => {\r\n    let years = [];\r\n    credits.forEach((element) => {\r\n      if (element.release_date) {\r\n        years.push(element.release_date.substring(0, 4));\r\n      } else if (element.first_air_date) {\r\n        years.push(element.first_air_date.substring(0, 4));\r\n      } else {\r\n        console.log(\"error\");\r\n      }\r\n    });\r\n    let unique = years.filter((v, i, a) => a.indexOf(v) === i);\r\n    unique.sort();\r\n    return unique.reverse();\r\n  };\r\n\r\n  const renderCredits = () => {\r\n    let unique = getUniqueYears();\r\n    console.log(unique);\r\n    return unique.map((year, index) => {\r\n      return (\r\n        <div key={index} className=\"year-box\">\r\n          <h2>{year}</h2>\r\n          {credits.map((el, index) => {\r\n            if (el.first_air_date) {\r\n              if (el.first_air_date.substring(0, 4) === year)\r\n                return (\r\n                  <CreditItem\r\n                    key={index}\r\n                    id={el.id}\r\n                    year={el.first_air_date}\r\n                    mediaName={el.name}\r\n                    character={el.character}\r\n                    mediaType={el.media_type}\r\n                  />\r\n                );\r\n            } else if (el.release_date) {\r\n              if (el.release_date.substring(0, 4) === year) {\r\n                return (\r\n                  <CreditItem\r\n                    key={index}\r\n                    id={el.id}\r\n                    year={el.release_date}\r\n                    mediaName={el.original_title}\r\n                    character={el.character}\r\n                    mediaType={el.media_type}\r\n                  />\r\n                );\r\n              }\r\n            } else {\r\n              return;\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Credits</h2>\r\n      <ul>{renderCredits()}</ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PersonCredits;\r\n","C:\\Users\\milan\\Desktop\\movieapp\\my-movie-app\\src\\components\\person-components\\CreditItem.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":17,"nodeType":"121","messageId":"122","endLine":2,"endColumn":25},{"ruleId":"119","severity":1,"message":"123","line":2,"column":27,"nodeType":"121","messageId":"122","endLine":2,"endColumn":36},{"ruleId":"124","severity":1,"message":"125","line":152,"column":6,"nodeType":"126","endLine":152,"endColumn":8,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":30,"column":6,"nodeType":"126","endLine":30,"endColumn":18,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":40,"column":11,"nodeType":"132","endLine":40,"endColumn":77},{"ruleId":"119","severity":1,"message":"133","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":21},{"ruleId":"119","severity":1,"message":"134","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":21},{"ruleId":"124","severity":1,"message":"135","line":26,"column":6,"nodeType":"126","endLine":26,"endColumn":14,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":29,"column":27,"nodeType":"139","messageId":"140","endLine":29,"endColumn":29},{"ruleId":"119","severity":1,"message":"141","line":2,"column":27,"nodeType":"121","messageId":"122","endLine":2,"endColumn":33},{"ruleId":"119","severity":1,"message":"142","line":2,"column":35,"nodeType":"121","messageId":"122","endLine":2,"endColumn":41},{"ruleId":"119","severity":1,"message":"143","line":2,"column":43,"nodeType":"121","messageId":"122","endLine":2,"endColumn":48},{"ruleId":"119","severity":1,"message":"144","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":18},{"ruleId":"124","severity":1,"message":"145","line":25,"column":6,"nodeType":"126","endLine":25,"endColumn":8,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":29,"column":7,"nodeType":"132","endLine":35,"endColumn":8},{"ruleId":"115","replacedBy":"149"},{"ruleId":"117","replacedBy":"150"},{"ruleId":"124","severity":1,"message":"151","line":40,"column":6,"nodeType":"126","endLine":40,"endColumn":8,"suggestions":"152"},{"ruleId":"124","severity":1,"message":"153","line":20,"column":6,"nodeType":"126","endLine":20,"endColumn":8,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":45,"column":36,"nodeType":"157","messageId":"158","endLine":45,"endColumn":38},{"ruleId":"155","severity":1,"message":"159","line":72,"column":15,"nodeType":"160","messageId":"161","endLine":72,"endColumn":22},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPersonData', 'item.first_air_date', 'item.gender', 'item.id', and 'item.release_date'. Either include them or remove the dependency array.","ArrayExpression",["164"],"React Hook useEffect has missing dependencies: 'entity', 'fetchItems', and 'query'. Either include them or remove the dependency array.",["165"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PersonDetails' is defined but never used.","'PersonCredits' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchDetails'. Either include it or remove the dependency array.",["166"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'SearchPage' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchLink' and 'params'. Either include them or remove the dependency array.",["167"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["162"],["163"],"React Hook useEffect has missing dependencies: 'type' and 'value'. Either include them or remove the dependency array.",["168"],"React Hook useEffect has a missing dependency: 'fetchCredits'. Either include it or remove the dependency array.",["169"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [getPersonData, item.first_air_date, item.gender, item.id, item.release_date]",{"range":"182","text":"183"},"Update the dependencies array to be: [entity, fetchItems, filterType, query]",{"range":"184","text":"185"},"Update the dependencies array to be: [fetchDetails, params]",{"range":"186","text":"187"},"Update the dependencies array to be: [fetchLink, params]",{"range":"188","text":"189"},"Update the dependencies array to be: [type, value]",{"range":"190","text":"191"},"Update the dependencies array to be: [fetchCredits]",{"range":"192","text":"193"},[3534,3536],"[getPersonData, item.first_air_date, item.gender, item.id, item.release_date]",[1074,1086],"[entity, fetchItems, filterType, query]",[963,971],"[fetchDetails, params]",[653,655],"[fetchLink, params]",[1091,1093],"[type, value]",[638,640],"[fetchCredits]"]